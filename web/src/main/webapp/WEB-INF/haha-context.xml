<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    <!-- 导入keter配置：由[keter-all-config]统一对外提供框架服务，不建议单独导入其他配置文件 -->
	<import resource="classpath*:keter-all-config.xml" />
	
    <!-- 引入多个配置文件且不会忽略错误 -->	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <!-- 导入keter域对象配置 -->
                <value>classpath:keter-domain.properties</value>
            </list>
        </property>
    </bean>
	
	<!-- 导入Service配置 -->
	<import resource="classpath*:service-config.xml" />
	
	<!-- Spring security configuration -->
	<import resource="security-config.xml" />
	
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<!-- 不写通配符也可以扫描子目录，且在容器中运行正确！ -->
	<context:component-scan base-package="haha" />

    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	  
	<!-- Map all static files from resources -->
 	<!-- 方案一：使用默认的Servlet来响应静态文件 -->
 	<!-- <mvc:default-servlet-handler/> --> 
 	<!-- 方案二：匹配的URL被当做静态资源，由Spring读出到内存中再响应http。 -->
 	<mvc:resources mapping="/public/**" location="/public/" />
 	<!-- <mvc:default-servlet-handler /> -->  
 
	<!-- Resolve logical view names to .jsp in the /WEB-INF/views/ directory -->
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
		
	<!-- Annotation validator -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			Configures Spring MVC DataBinder instances
			<bean
				class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="validator" ref="validator" />
			</bean>
		</property> 
	</bean>
 -->
	<!-- Creates the JSR-303 Validator -->
	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" /> -->	
</beans>